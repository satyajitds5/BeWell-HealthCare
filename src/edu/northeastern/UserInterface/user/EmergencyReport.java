/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.northeastern.UserInterface.user;

import edu.northeastern.Business.EcoSystem;
import edu.northeastern.Business.UserAcc.UserAcc;
import edu.northeastern.Business.WorkQueue.Req_Emergency;
import edu.northeastern.Business.WorkQueue.Req_EmergencyDir;
import edu.northeastern.Business.userR.User;
import edu.northeastern.UserInterface.SysAdmin.MapViewr;
import edu.northeastern.Utility.MapCoordinates;
import edu.northeastern.Utility.Notification;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author satyajitdas
 */
public class EmergencyReport extends javax.swing.JPanel {

    EcoSystem system;
    JPanel rightSidePanel;
    MapCoordinates locationPoint;
    /**
     * Creates new form BloodDonations
     *
     * @param system
     * @param rightSidePanel
     */

    JPanel container;

   UserAcc userAcc;
    public EmergencyReport(JPanel container,EcoSystem system,UserAcc userAcc, MapCoordinates locationPoint) {
        initComponents();
         this.rightSidePanel=container;
        this.system=system;
        this.userAcc=userAcc;
        this.locationPoint = locationPoint;
        User a=(User)userAcc;
        firstNameField.setText(a.getFirstName());
        lastNameField.setText(a.getLastName());

        displayTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmergency = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        reportButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        emergencyBox = new javax.swing.JComboBox<>();
        locationInputField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(250, 249, 251));
        setPreferredSize(new java.awt.Dimension(1160, 750));

        jPanel1.setBackground(new java.awt.Color(250, 249, 251));
        jPanel1.setPreferredSize(new java.awt.Dimension(1160, 750));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel1.setText("Report Emergency");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 31, -1, -1));

        tblEmergency.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEmergency);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 580, 630));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        reportButton.setBackground(new java.awt.Color(10, 132, 255));
        reportButton.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        reportButton.setForeground(new java.awt.Color(255, 255, 255));
        reportButton.setText("Report");
        reportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportButtonActionPerformed(evt);
            }
        });
        jPanel7.add(reportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 210, 39));

        cancelButton.setBackground(new java.awt.Color(255, 55, 95));
        cancelButton.setFont(new java.awt.Font("SF Pro Text", 1, 14)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Close");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel7.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 580, 200, 39));

        jLabel2.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel2.setText("Enter Details");
        jPanel7.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 300, 50));

        firstNameLabel.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        firstNameLabel.setForeground(new java.awt.Color(73, 84, 90));
        firstNameLabel.setText("First Name");
        jPanel7.add(firstNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 220, -1));

        lastNameField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(lastNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 420, 40));

        lastNameLabel.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        lastNameLabel.setForeground(new java.awt.Color(73, 84, 90));
        lastNameLabel.setText("Last Name");
        jPanel7.add(lastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 220, -1));

        firstNameField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(firstNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 420, 40));

        jLabel9.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(73, 84, 90));
        jLabel9.setText("Emergency");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 220, -1));

        emergencyBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ambulance", "Fire", "Police" }));
        jPanel7.add(emergencyBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 420, 40));

        locationInputField.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        jPanel7.add(locationInputField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 420, 40));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(73, 84, 90));
        jLabel8.setText("Location");
        jPanel7.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 220, -1));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 470, 630));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void reportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportButtonActionPerformed
        // TODO add your handling code here:
        reportEmergency();


    }//GEN-LAST:event_reportButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:

        cancelEmergency();


    }//GEN-LAST:event_cancelButtonActionPerformed


        public void populateLongituteLatitude(MapCoordinates locationPoint) {
        this.locationPoint = locationPoint;
        locationInputField.setText(locationPoint.getLatitudeCoordinate()+ ", " + locationPoint.getLongitudeCoordinate());   
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> emergencyBox;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField locationInputField;
    private javax.swing.JButton reportButton;
    private javax.swing.JTable tblEmergency;
    // End of variables declaration//GEN-END:variables

    private void displayTable() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        Req_EmergencyDir emerDir = system.getEmergencyReqDir();
        ArrayList<Req_Emergency> emergencyDir = emerDir.getEmergencyUserList();
        int l = emergencyDir.size();
        for (int i = 0; i < l; i++) {
            Req_Emergency reqEmer = emergencyDir.get(i);
            if (userAcc.getUserName().matches(reqEmer.getUserId())) {
                DefaultTableModel table = (DefaultTableModel) tblEmergency.getModel();
                String r1 = String.valueOf(reqEmer.getId());
                String r2[] = {r1, reqEmer.getEmergency(), reqEmer.getLocation(), reqEmer.getStatus(), reqEmer.getResponse()};
                table.addRow(r2);
            }
        }

    }

    private void reportEmergency() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

     if(!locationInputField.getText().isEmpty())
        {
            Req_Emergency re=new Req_Emergency();
        User a=(User)userAcc;
        int x = 1 + (int) (Math.random() * 100);
        re.setId(x);
        re.setName(a.getFirstName());
        re.setUserId(a.getUserId());
        re.setEmergency(emergencyBox.getSelectedItem().toString());
        re.setLocation(locationInputField.getText());
        re.setStatus("In Progress");
        re.setResponse("No Response");
            Req_EmergencyDir red=system.getEmergencyReqDir();
        red.addEmergencyUser(re);
        String subject = "Emergency request raised";
        String content = "Emergency request has been raised.";
        sendmail(subject, content);
        tblEmergency.setModel(new DefaultTableModel(null,new String[]{"ID","Emergency","Location","Status","Response"}));
        displayTable();
                    JOptionPane.showMessageDialog(null, "Reported Emergency Successfully!!!");
        }
        else
        {

            JOptionPane.showMessageDialog(null, "Please Enter the location for Emergency Services!");
        }
    }

    public void sendmail(String subject, String content) {
        Notification notification = new Notification();
        String toEmail = "satyajitds5@gmail.com";
        String emailSubject = subject;
        String emailContent = content;
        notification.sendMail(toEmail, emailSubject, emailContent);
    }

    
    private void cancelEmergency() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel table = (DefaultTableModel) tblEmergency.getModel();
        int selectedRow = tblEmergency.getSelectedRow();
        if (selectedRow >= 0) {
            int sRow = Integer.parseInt(table.getValueAt(selectedRow, 0).toString());
            Req_EmergencyDir emerDir = system.getEmergencyReqDir();
            ArrayList<Req_Emergency> emerList = emerDir.getEmergencyUserList();
            int l = emerList.size();
            for (int i = 0; i < l; i++) {
                Req_Emergency reqEmer = emerList.get(i);
                if (sRow == reqEmer.getId()) {
                    if (reqEmer.getStatus().matches("In Progress")) {
                        reqEmer.setStatus("Closed");
                        String subject = "Emergency request closed";
                        String content = "Emergency request has been closed.";
                        sendmail(subject, content);
                        JOptionPane.showMessageDialog(null, "Case Closed");

                    } else if (reqEmer.getStatus().matches("Closed")) {
                        JOptionPane.showMessageDialog(null, "Your Emergency Case is Closed successfully!!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Reported as false Alarm!!");
                    }
                }

            }
            tblEmergency.setModel(new DefaultTableModel(null, new String[]{"ID", "Emergency", "Location", "Status", "Response"}));
            displayTable();
        } else {
            JOptionPane.showMessageDialog(null, "Select A Row!!");

        }

    }
}
